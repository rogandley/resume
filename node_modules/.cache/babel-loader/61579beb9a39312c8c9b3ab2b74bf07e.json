{"ast":null,"code":"import PrinterLink from\"./PrinterLink\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var projects=[{name:'Rod of Fishing',link:'https://github.com/rogandley/RodOfFishing',description:'Twitter bot for fans of the game \"Hades\" which combines an image of one of its fish combined with an associated voice line.',technologies:['Python','Twitter API']},{name:'GPS to KML',link:'',description:'Program that takes in raw data from a GPS and transforms it into a Google Earth readable KML file, plotting points at which the car goes uphill, downhill, stops, or is parked during an errand.',technologies:['Python','Pynmea','Pandas','Google Earth']}];// eslint-disable-next-line import/no-anonymous-default-export\nexport default(function(){var projectComponents=projects.map(function(project,i){return/*#__PURE__*/_jsxs(\"div\",{className:'personal--project',children:[/*#__PURE__*/_jsxs(\"div\",{className:'personal--repo-technologies',children:[/*#__PURE__*/_jsx(\"h2\",{className:'personal--name',children:project.name}),/*#__PURE__*/_jsxs(\"div\",{className:'personal--links',children:[/*#__PURE__*/_jsx(PrinterLink,{className:'personal--link',url:project.link,text:'GitHub',prependIcon:'github'}),project.demoLink?/*#__PURE__*/_jsx(PrinterLink,{className:'personal--link',url:project.demoLink,text:'Demo',prependIcon:'links'}):undefined]})]}),/*#__PURE__*/_jsx(\"div\",{className:'personal--technologies',children:project.technologies.join(' • ')}),/*#__PURE__*/_jsx(\"p\",{className:'personal--description',children:project.description})]},i);});return/*#__PURE__*/_jsxs(\"div\",{className:'personal',children:[/*#__PURE__*/_jsx(\"h1\",{className:'personal--heading heading--body',children:'Personal Projects'}),projectComponents]});});","map":{"version":3,"sources":["E:/Buck/Downloads/resume-main/resume-main/rogandley.github.io/src/components/Personal.js"],"names":["PrinterLink","projects","name","link","description","technologies","projectComponents","map","project","i","demoLink","undefined","join"],"mappings":"AAAA,MAAOA,CAAAA,WAAP,KAAwB,eAAxB,C,wFAEA,GAAMC,CAAAA,QAAQ,CAAG,CACb,CACIC,IAAI,CAAE,gBADV,CAEIC,IAAI,CAAE,2CAFV,CAGIC,WAAW,CAAE,6HAHjB,CAIIC,YAAY,CAAE,CAAC,QAAD,CAAW,aAAX,CAJlB,CADa,CAOb,CACIH,IAAI,CAAE,YADV,CAEFC,IAAI,CAAE,EAFJ,CAGIC,WAAW,CAAE,kMAHjB,CAIIC,YAAY,CAAE,CAAC,QAAD,CAAW,QAAX,CAAqB,QAArB,CAA+B,cAA/B,CAJlB,CAPa,CAAjB,CAeA;AACA,eAAe,UAAM,CACjB,GAAMC,CAAAA,iBAAiB,CAAGL,QAAQ,CAACM,GAAT,CAAa,SAACC,OAAD,CAAUC,CAAV,CAAgB,CACnD,mBAAO,aAAa,SAAS,CAAE,mBAAxB,wBACH,aAAK,SAAS,CAAE,6BAAhB,wBACI,WAAI,SAAS,CAAE,gBAAf,UAAkCD,OAAO,CAACN,IAA1C,EADJ,cAEI,aAAK,SAAS,CAAE,iBAAhB,wBACI,KAAC,WAAD,EAAa,SAAS,CAAE,gBAAxB,CAA0C,GAAG,CAAEM,OAAO,CAACL,IAAvD,CAA6D,IAAI,CAAE,QAAnE,CAA6E,WAAW,CAAE,QAA1F,EADJ,CAEKK,OAAO,CAACE,QAAR,cAAmB,KAAC,WAAD,EAAa,SAAS,CAAE,gBAAxB,CAA0C,GAAG,CAAEF,OAAO,CAACE,QAAvD,CAAiE,IAAI,CAAE,MAAvE,CAA+E,WAAW,CAAE,OAA5F,EAAnB,CAA4HC,SAFjI,GAFJ,GADG,cAQH,YAAK,SAAS,CAAE,wBAAhB,UAA2CH,OAAO,CAACH,YAAR,CAAqBO,IAArB,CAA0B,KAA1B,CAA3C,EARG,cASH,UAAG,SAAS,CAAE,uBAAd,UAAwCJ,OAAO,CAACJ,WAAhD,EATG,GAAUK,CAAV,CAAP,CAWH,CAZyB,CAA1B,CAaA,mBAAO,aAAK,SAAS,CAAE,UAAhB,wBACH,WAAI,SAAS,CAAE,iCAAf,UAAmD,mBAAnD,EADG,CAEFH,iBAFE,GAAP,CAIH,CAlBD","sourcesContent":["import PrinterLink from \"./PrinterLink\"\r\n\r\nconst projects = [\r\n    {\r\n        name: 'Rod of Fishing',\r\n        link: 'https://github.com/rogandley/RodOfFishing',\r\n        description: 'Twitter bot for fans of the game \"Hades\" which combines an image of one of its fish combined with an associated voice line.',\r\n        technologies: ['Python', 'Twitter API']\r\n    },\r\n    {\r\n        name: 'GPS to KML',\r\n\t\tlink: '',\r\n        description: 'Program that takes in raw data from a GPS and transforms it into a Google Earth readable KML file, plotting points at which the car goes uphill, downhill, stops, or is parked during an errand.',\r\n        technologies: ['Python', 'Pynmea', 'Pandas', 'Google Earth']\r\n    },\r\n]\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default () => {\r\n    const projectComponents = projects.map((project, i) => {\r\n        return <div key={i} className={'personal--project'}>\r\n            <div className={'personal--repo-technologies'}>\r\n                <h2 className={'personal--name'}>{project.name}</h2>\r\n                <div className={'personal--links'}>\r\n                    <PrinterLink className={'personal--link'} url={project.link} text={'GitHub'} prependIcon={'github'}/>\r\n                    {project.demoLink ? <PrinterLink className={'personal--link'} url={project.demoLink} text={'Demo'} prependIcon={'links'}/> : undefined}\r\n                </div>\r\n            </div>\r\n            <div className={'personal--technologies'}>{project.technologies.join(' • ')}</div>\r\n            <p className={'personal--description'}>{project.description}</p>\r\n        </div>\r\n    })\r\n    return <div className={'personal'}>\r\n        <h1 className={'personal--heading heading--body'}>{'Personal Projects'}</h1>\r\n        {projectComponents}\r\n    </div>\r\n}"]},"metadata":{},"sourceType":"module"}